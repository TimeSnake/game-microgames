repositories {
    mavenLocal()
    maven {
        url = uri 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        url = uri 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        url = uri 'https://repo.maven.apache.org/maven2/'
    }
}

dependencies {
    implementation project(':basic-game')
    implementation project(':library-game')

    compileOnly project(':basic-bukkit')

    compileOnly project(':database-bukkit')
    compileOnly project(':database-api')

    compileOnly project(':channel-bukkit')
    compileOnly project(':channel-api')

    compileOnly project(':library-packets')
    compileOnly project(':library-entities')
    compileOnly project(':library-reflection')
    compileOnly project(':library-extension')
    compileOnly project(':library-basic')

    compileOnly project.paper_api
    compileOnly project.spigot_api
    compileOnly project.spigot
}

group = project.group
version = '1.0-SNAPSHOT'
archivesBaseName = 'game-microgames'

task buildFatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = archivesBaseName
    classifier = "all"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task deleteOldPluginJar(type: Delete) {
    delete fileTree(dir: "${project.plugins_dir}", include: "**/${archivesBaseName}-*.jar")
}

task copyJarToPlugins(type: Copy) {
    from "build/libs/" + archivesBaseName + "-" + version + "-all" + ".jar"
    into project.plugins_dir
}

jar.finalizedBy(buildFatJar)
copyJarToPlugins.dependsOn(buildFatJar)
copyJarToPlugins.dependsOn(deleteOldPluginJar)
jar.finalizedBy(copyJarToPlugins)