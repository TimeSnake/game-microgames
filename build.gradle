plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        url = uri 'https://papermc.io/repo/repository/maven-public/'
    }

    maven {
        url = uri 'https://repo.maven.apache.org/maven2/'
    }
}

dependencies {
    implementation project(':basic-game')
    implementation project(':library-game')

    compileOnly project(':basic-bukkit')

    compileOnly project(':database-bukkit')
    compileOnly project(':database-api')

    compileOnly project(':channel-bukkit')
    compileOnly project(':channel-api')

    compileOnly project(':library-packets')
    compileOnly project(':library-entities:library-entities')
    compileOnly project(':library-reflection')
    compileOnly project(':library-extension')
    compileOnly project(':library-basic')

    compileOnly project.paper_api
    compileOnly project.spigot_api
    compileOnly project.spigot
}

group = project.group
version = '1.0-SNAPSHOT'
description = 'game-microgames'
java.sourceCompatibility = 1.17
java.targetCompatibility = 1.17

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task buildFatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = project(':game-microgames').name
    classifier = "all"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar.finalizedBy(buildFatJar)

task copyJarToPlugins(type: Copy) {
    from "build/libs/" + project(':game-microgames').name + "-" + version + "-all" + ".jar"
    into "../../plugins"
}

copyJarToPlugins.dependsOn(buildFatJar)
jar.finalizedBy(copyJarToPlugins)
